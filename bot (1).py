
import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils.executor import start_polling
from random import choice

TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ú–æ–Ω–µ—Ç–∏ —Ç–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∏
coins = ["ETH", "XRP", "SOL", "PEPE", "OP", "DOGE"]
timeframes = ["15m", "1h", "4h", "1d"]
directions = ["‚¨ÜÔ∏è", "‚¨áÔ∏è"]

# –ì–µ–Ω–µ—Ä—É—î–º–æ —Ç–∞–±–ª–∏—Ü—é –ø—Ä–æ–≥–Ω–æ–∑—É
def generate_prediction():
    header = "–ú–æ–Ω–µ—Ç–∞ | 15m | 1h | 4h | 1d\n"
    header += "-----------------------------\n"
    rows = []
    for coin in coins:
        row = f"{coin:<6} | " + " | ".join(choice(directions) for _ in timeframes)
        rows.append(row)
    return header + "\n".join(rows)

# –ë–æ—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ –±—É–¥—å-—è–∫–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ–≥–Ω–æ–∑–æ–º
@dp.message_handler()
async def send_forecast(message: types.Message):
    forecast = generate_prediction()
    await message.answer(
        f"üìä –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞—Ä–∞–∑ (–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∫–∏—Ç—ñ–≤):\n\n{forecast}\n\n"
        "‚¨ÜÔ∏è = LONG (–∑—Ä–æ—Å—Ç–∞–Ω–Ω—è), ‚¨áÔ∏è = SHORT (–ø–∞–¥—ñ–Ω–Ω—è)"
    )

if __name__ == "__main__":
    start_polling(dp, skip_updates=True)
