
import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.utils.executor import start_polling
from random import choice

TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –Ü–º—ñ—Ç–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –∫–∏—Ç–æ–≤–æ—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
coins = ["ETH", "XRP", "SOL", "PEPE", "OP", "DOGE"]
timeframes = ["15m", "1h", "4h", "1d"]
directions = ["‚¨ÜÔ∏è", "‚¨áÔ∏è"]

# –§—É–Ω–∫—Ü—ñ—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ñ–µ–π–∫–æ–≤–æ—ó —Ç–∞–±–ª–∏—Ü—ñ (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó)
def generate_prediction():
    header = "–ú–æ–Ω–µ—Ç–∞ | 15m | 1h | 4h | 1d\n"
    header += "-----------------------------\n"
    rows = []
    for coin in coins:
        row = f"{coin:<6} | " + " | ".join(choice(directions) for _ in timeframes)
        rows.append(row)
    return header + "\n".join(rows)

# –û–±—Ä–æ–±–∫–∞ –±—É–¥—å-—è–∫–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑
@dp.message_handler()
async def auto_reply(message: types.Message):
    forecast = generate_prediction()
    await message.answer(
        f"üìä –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞—Ä–∞–∑ (–Ω–∞ –æ—Å–Ω–æ–≤—ñ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –∫–∏—Ç—ñ–≤):\n\n{forecast}\n\n"
        "‚¨ÜÔ∏è = LONG (–∑—Ä–æ—Å—Ç–∞–Ω–Ω—è), ‚¨áÔ∏è = SHORT (–ø–∞–¥—ñ–Ω–Ω—è)"
    )

if __name__ == "__main__":
    start_polling(dp, skip_updates=True)
